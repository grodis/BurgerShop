@model beeftechee.Entities.Burger

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


<form action="/Burger/Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Burger</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (String.IsNullOrWhiteSpace(Model.ImageUrl))
        {
            <div class="form-group">
                <img src="~/Content/noImage.jpg" alt="No Burger Image" />
            </div>
        }
        else
        {
            <div class="form-group">
                <img src="~/Content/BurgerImages/@Model.ImageUrl" alt="No Burger Image" />
            </div>
        }


        <div class="form-group">
            <input type="file" name="ImageUrl" value="@Model.ImageUrl"/>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BreadId, "BreadId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BreadId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BreadId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MeatId, "MeatId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MeatId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeatId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheeseId, "CheeseId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CheeseId", null,"None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheeseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SauceId, "SauceId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SauceId", null,"None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SauceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VeggieId, "VeggieId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VeggieId", null,"None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VeggieId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
